smt <- summary(df$valor)
res[3] <- df[which(df$valor == smt[1])[1], 3]
res[4] <- smt[1]
res[5] <- df[which(df$valor == smt[6])[1], 3]
res[6] <- smt[6]
res[7] <- smt[2]
res[8] <- smt[3]
res[9] <- smt[5]
res[10] <- smt[4]
res[11] <- sum(df$valor)
res[12] <- round(smt[6]/smt[1],3)
res[13] <- round(smt[4]/smt[1],3)
res[14] <- round(smt[6]/smt[4],3)
names(res) <- c('codigo','nome', 'am_min', 'min', 'am_max', 'max', 'q1', 'q2', 'q3',
'avg', 'sum', 'mx_mi', 'av_mi', 'mx_av')
return(res)
}
x_prestadores_am <- read_excel('prestadores_2016_17.xlsx') %>%
select(codigo = "Identificador do Prestador",
nome = "Nome do Prestador",
anomes = "Ano e Mês",
valor = "Valor Aprovado (calculado)",
quantidade = "Quantidade Aprovada") %>%
arrange(codigo, anomes)
f_codigo <- factor(x_prestadores_am$codigo)
ls_range <- x_prestadores_am %>%
split(f_codigo) %>%
map(f.resumo)
df_prestadores <-  tibble('codigo' = character(),
'nome' = character(),
'am_min' = character(),
'min' = double(),
'am_max' = character(),
'max' = double(),
'q1' = double(),
'q2' = double(),
'q3' = double(),
'avg' = double(),
'sum' = double(),
'mx_mi' = double(),
'av_mi' = double(),
'mx_av' = double())
for(i in seq_along(ls_range)) {
for(j in seq_along(ls_range[[i]])) {
df_prestadores[i, j] <- ls_range[[i]][[j]]
}
}
df_pretadores_att <- df_prestadores %>%
filter(coef > 3, min > 50000)
df_pretadores_att <- df_prestadores %>%
filter(mx_mi > 3, min > 50000)
df_pretadores_att <- df_prestadores %>%
filter(mx_mi > 3, av_mi < 2, mx_av < 2)
df_pretadores_att <- df_prestadores %>%
filter(mx_mi > 3, av_mi < 2, mx_av < 2)
View(df_pretadores_att)
df_pretadores_att <- df_prestadores %>%
filter(mx_mi > 3,
av_mi < 2,
mx_av < 2,
str_sub(am_max, 1, 4) == '2017',
am_min < '201606')
tail(df_prestadores, 5)
tt <- tail(df_prestadores, 5)
tt
f.resumo <- function(df) {
res <- character()
res[1] <- df[1,1]
res[2] <- df[1,2]
smt <- summary(df$valor)
res[3] <- df[which(df$valor == smt[1])[1], 3]
res[4] <- smt[1]
res[5] <- df[which(df$valor == smt[6])[1], 3]
res[6] <- smt[6]
res[7] <- smt[2]
res[8] <- smt[3]
res[9] <- smt[5]
res[10] <- smt[4]
res[11] <- sum(df$valor)
res[12] <- round(smt[6]/smt[1], 3)
res[13] <- round(smt[4]/smt[1], 3)
res[14] <- round(smt[6]/smt[4], 3)
if (nrow(df) >= 10) {
dft <- tail(df, 5)
tm <- mean(dft$valor)
dfh <- head(df, 5)
hm <- mean(dfh$valor)
} else {
dft <- tail(df, 3)
tm <- mean(dft$valor)
dfh <- head(df, 3)
hm <- mean(dfh$valor)
}
res[15] <- round(tm/hm, 3)
names(res) <- c('codigo','nome', 'am_min', 'min', 'am_max', 'max', 'q1', 'q2', 'q3',
'avg', 'sum', 'mx_mi', 'av_mi', 'mx_av', 'tav_hav')
return(res)
}
x_prestadores_am <- read_excel('prestadores_2016_17.xlsx') %>%
select(codigo = "Identificador do Prestador",
nome = "Nome do Prestador",
anomes = "Ano e Mês",
valor = "Valor Aprovado (calculado)",
quantidade = "Quantidade Aprovada") %>%
arrange(codigo, anomes)
f_codigo <- factor(x_prestadores_am$codigo)
ls_range <- x_prestadores_am %>%
split(f_codigo) %>%
map(f.resumo)
df_prestadores <-  tibble('codigo' = character(),
'nome' = character(),
'am_min' = character(),
'min' = double(),
'am_max' = character(),
'max' = double(),
'q1' = double(),
'q2' = double(),
'q3' = double(),
'avg' = double(),
'sum' = double(),
'mx_mi' = double(),
'av_mi' = double(),
'mx_av' = double(),
'tav_hav' = double())
for(i in seq_along(ls_range)) {
for(j in seq_along(ls_range[[i]])) {
df_prestadores[i, j] <- ls_range[[i]][[j]]
}
}
df_pretadores_att <- df_prestadores %>%
filter(#mx_mi > 3,
#av_mi < 2,
#mx_av < 2,
tav_hav > 2,
str_sub(am_max, 1, 4) == '2017',
am_min < '201606',
avg > 100000)
df_pretadores_att <- df_prestadores %>%
filter(#mx_mi > 3,
#av_mi < 2,
#mx_av < 2,
tav_hav > 2,
str_sub(am_max, 1, 4) == '2017',
#am_min < '201606',
avg > 100000)
seq_len(df_pretadores_att)
seq_len(df_pretadores_att[,1])
for (i in 1:nrow(df_pretadores_att)) {
print(i)
}
f.plot <- function(df) {
gg <- ggplot(data = df , aes(x = anomes)) +
geom_line(aes(y = valor, color = valor, group = 1),
size = 1, alpha = 1, show.legend = T) +
labs(title = paste0('Faturamento do Prestador: ',df[1,2]),
x = 'Ano e mês',
y = 'Valores') +
theme_gray() +
theme(axis.text.x = element_text(angle = 45,
vjust = 1,
size = 9,
hjust = 1))
plot(gg)
}
for (i in 1:nrow(df_pretadores_att)) {
df_tmp <- df_prestadores %>%
filter(codigo = df_pretadores_att[i, 1])
f.plot(df_tmp)
}
for (i in 1:nrow(df_pretadores_att)) {
df_tmp <- df_prestadores %>%
filter(codigo == df_pretadores_att[i, 1])
f.plot(df_tmp)
}
print(df_tmp)
1:nrow(df_pretadores_att)
df_prestadores %>%
filter(codigo == df_pretadores_att[1, 1])
df_pretadores_att[1, 1]
df_prestadores %>%
filter(codigo == 669212)
x_prestadores_am %>%
filter(codigo == 669212)
for (i in 1:nrow(df_pretadores_att)) {
df_tmp <- x_prestadores_am %>%
filter(codigo == df_pretadores_att[i, 1])
print(df_tmp)
#f.plot(df_tmp)
}
f.resumo <- function(df) {
res <- character()
res[1] <- df[1,1]
res[2] <- df[1,2]
smt <- summary(df$valor)
res[3] <- df[which(df$valor == smt[1])[1], 3]
res[4] <- smt[1]
res[5] <- df[which(df$valor == smt[6])[1], 3]
res[6] <- smt[6]
res[7] <- smt[2]
res[8] <- smt[3]
res[9] <- smt[5]
res[10] <- smt[4]
res[11] <- sum(df$valor)
res[12] <- round(smt[6]/smt[1], 3)
res[13] <- round(smt[4]/smt[1], 3)
res[14] <- round(smt[6]/smt[4], 3)
if (nrow(df) >= 10) {
dft <- tail(df, 5)
tm <- mean(dft$valor)
dfh <- head(df, 5)
hm <- mean(dfh$valor)
} else {
dft <- tail(df, 3)
tm <- mean(dft$valor)
dfh <- head(df, 3)
hm <- mean(dfh$valor)
}
res[15] <- round(tm/hm, 3)
names(res) <- c('codigo','nome', 'am_min', 'min', 'am_max', 'max', 'q1', 'q2', 'q3',
'avg', 'sum', 'mx_mi', 'av_mi', 'mx_av', 'tav_hav')
return(res)
}
x_prestadores_am <- read_excel('prestadores_2016_17.xlsx') %>%
select(codigo = "Identificador do Prestador",
nome = "Nome do Prestador",
anomes = "Ano e Mês",
valor = "Valor Aprovado (calculado)",
quantidade = "Quantidade Aprovada") %>%
arrange(codigo, anomes)
f_codigo <- factor(x_prestadores_am$codigo)
ls_range <- x_prestadores_am %>%
split(f_codigo) %>%
map(f.resumo)
df_prestadores <-  tibble('codigo' = character(),
'nome' = character(),
'am_min' = character(),
'min' = double(),
'am_max' = character(),
'max' = double(),
'q1' = double(),
'q2' = double(),
'q3' = double(),
'avg' = double(),
'sum' = double(),
'mx_mi' = double(),
'av_mi' = double(),
'mx_av' = double(),
'tav_hav' = double())
for(i in seq_along(ls_range)) {
for(j in seq_along(ls_range[[i]])) {
df_prestadores[i, j] <- ls_range[[i]][[j]]
}
}
df_prestadores_att <- df_prestadores %>%
filter(#mx_mi > 3,
#av_mi < 2,
#mx_av < 2,
tav_hav > 2,
str_sub(am_max, 1, 4) == '2017',
#am_min < '201606',
avg > 100000)
f.plot <- function(df) {
gg <- ggplot(data = df , aes(x = anomes)) +
geom_line(aes(y = valor, color = valor, group = 1),
size = 1, alpha = 1, show.legend = T) +
labs(title = paste0('Faturamento do Prestador: ',df[1,2]),
x = 'Ano e mês',
y = 'Valores') +
theme_gray() +
theme(axis.text.x = element_text(angle = 45,
vjust = 1,
size = 9,
hjust = 1))
plot(gg)
}
View(x_prestadores_am)
df_tmp <- x_prestadores_am %>%
filter(codigo == df_prestadores_att[1, 1])
df_tmp
df_prestadores_att[1, 1]
df_tmp <- x_prestadores_am %>%
filter(codigo == 669212)
df_tmp
df_prestadores_att[1, 1]
df_prestadores_att[1, 1][1]
df_prestadores_att[1, 1][1]
df_prestadores_att[[1]]
df_prestadores_att[[1]][1]
for (i in 1:nrow(df_prestadores_att)) {
df_tmp <- x_prestadores_am %>%
filter(codigo == df_prestadores_att[[1]][i])
print(df_tmp)
#f.plot(df_tmp)
}
f.plot(df_tmp)
df_prestadores_att[[1]][2]
df_prestadores_att[[1]][3]
df_prestadores_att[[2]]
df_prestadores_att[[1]]
df_prestadores_att[[3]]
1:nrow(df_prestadores_att)
f.resumo <- function(df) {
res <- character()
res[1] <- df[1,1]
res[2] <- df[1,2]
smt <- summary(df$valor)
res[3] <- df[which(df$valor == smt[1])[1], 3]
res[4] <- smt[1]
res[5] <- df[which(df$valor == smt[6])[1], 3]
res[6] <- smt[6]
res[7] <- smt[2]
res[8] <- smt[3]
res[9] <- smt[5]
res[10] <- smt[4]
res[11] <- sum(df$valor)
res[12] <- round(smt[6]/smt[1], 3)
res[13] <- round(smt[4]/smt[1], 3)
res[14] <- round(smt[6]/smt[4], 3)
if (nrow(df) >= 10) {
dft <- tail(df, 5)
tm <- mean(dft$valor)
dfh <- head(df, 5)
hm <- mean(dfh$valor)
} else {
dft <- tail(df, 3)
tm <- mean(dft$valor)
dfh <- head(df, 3)
hm <- mean(dfh$valor)
}
res[15] <- round(tm/hm, 3)
names(res) <- c('codigo','nome', 'am_min', 'min', 'am_max', 'max', 'q1', 'q2', 'q3',
'avg', 'sum', 'mx_mi', 'av_mi', 'mx_av', 'tav_hav')
return(res)
}
x_prestadores_am <- read_excel('prestadores_2016_17.xlsx') %>%
select(codigo = "Identificador do Prestador",
nome = "Nome do Prestador",
anomes = factor("Ano e Mês"),
valor = "Valor Aprovado (calculado)",
quantidade = "Quantidade Aprovada") %>%
arrange(codigo, anomes)
f.resumo <- function(df) {
res <- character()
res[1] <- df[1,1]
res[2] <- df[1,2]
smt <- summary(df$valor)
res[3] <- df[which(df$valor == smt[1])[1], 3]
res[4] <- smt[1]
res[5] <- df[which(df$valor == smt[6])[1], 3]
res[6] <- smt[6]
res[7] <- smt[2]
res[8] <- smt[3]
res[9] <- smt[5]
res[10] <- smt[4]
res[11] <- sum(df$valor)
res[12] <- round(smt[6]/smt[1], 3)
res[13] <- round(smt[4]/smt[1], 3)
res[14] <- round(smt[6]/smt[4], 3)
if (nrow(df) >= 10) {
dft <- tail(df, 5)
tm <- mean(dft$valor)
dfh <- head(df, 5)
hm <- mean(dfh$valor)
} else {
dft <- tail(df, 3)
tm <- mean(dft$valor)
dfh <- head(df, 3)
hm <- mean(dfh$valor)
}
res[15] <- round(tm/hm, 3)
names(res) <- c('codigo','nome', 'am_min', 'min', 'am_max', 'max', 'q1', 'q2', 'q3',
'avg', 'sum', 'mx_mi', 'av_mi', 'mx_av', 'tav_hav')
return(res)
}
x_prestadores_am <- read_excel('prestadores_2016_17.xlsx') %>%
select(codigo = "Identificador do Prestador",
nome = "Nome do Prestador",
anomes = "Ano e Mês",
valor = "Valor Aprovado (calculado)",
quantidade = "Quantidade Aprovada") %>%
mutate(anomes = factor(anomes)) %>%
arrange(codigo, anomes)
View(x_prestadores_am)
str(x_prestadores_am)
f_codigo <- factor(x_prestadores_am$codigo)
ls_range <- x_prestadores_am %>%
split(f_codigo) %>%
map(f.resumo)
df_prestadores <-  tibble('codigo' = character(),
'nome' = character(),
'am_min' = character(),
'min' = double(),
'am_max' = character(),
'max' = double(),
'q1' = double(),
'q2' = double(),
'q3' = double(),
'avg' = double(),
'sum' = double(),
'mx_mi' = double(),
'av_mi' = double(),
'mx_av' = double(),
'tav_hav' = double())
for(i in seq_along(ls_range)) {
for(j in seq_along(ls_range[[i]])) {
df_prestadores[i, j] <- ls_range[[i]][[j]]
}
}
df_prestadores_att <- df_prestadores %>%
filter(#mx_mi > 3,
#av_mi < 2,
#mx_av < 2,
tav_hav > 2,
str_sub(am_max, 1, 4) == '2017',
#am_min < '201606',
avg > 100000)
f.plot <- function(df) {
gg <- ggplot(data = df , aes(x = anomes)) +
geom_line(aes(y = valor, color = valor, group = 1),
size = 1, alpha = 1, show.legend = T) +
labs(title = paste0('Faturamento do Prestador: ',df[1,2]),
x = 'Ano e mês',
y = 'Valores') +
theme_gray() +
theme(axis.text.x = element_text(angle = 45,
vjust = 1,
size = 9,
hjust = 1))
plot(gg)
}
df_tmp <- x_prestadores_am %>%
filter(codigo == df_prestadores_att[[1]][1])
df_tmp
df_prestadores %>%
filter(#mx_mi > 3,
#av_mi < 2,
#mx_av < 2,
tav_hav > 2,
str_sub(am_max, 1, 4) == '2017',
#am_min < '201606',
avg > 100000)
View(df_prestadores)
View(df_prestadores)
f.resumo <- function(df) {
res <- character()
res[1] <- df[1,1]
res[2] <- df[1,2]
smt <- summary(df$valor)
res[3] <- as.character(df[which(df$valor == smt[1])[1], 3])
res[4] <- smt[1]
res[5] <- as.character(df[which(df$valor == smt[6])[1], 3])
res[6] <- smt[6]
res[7] <- smt[2]
res[8] <- smt[3]
res[9] <- smt[5]
res[10] <- smt[4]
res[11] <- sum(df$valor)
res[12] <- round(smt[6]/smt[1], 3)
res[13] <- round(smt[4]/smt[1], 3)
res[14] <- round(smt[6]/smt[4], 3)
if (nrow(df) >= 10) {
dft <- tail(df, 5)
tm <- mean(dft$valor)
dfh <- head(df, 5)
hm <- mean(dfh$valor)
} else {
dft <- tail(df, 3)
tm <- mean(dft$valor)
dfh <- head(df, 3)
hm <- mean(dfh$valor)
}
res[15] <- round(tm/hm, 3)
names(res) <- c('codigo','nome', 'am_min', 'min', 'am_max', 'max', 'q1', 'q2', 'q3',
'avg', 'sum', 'mx_mi', 'av_mi', 'mx_av', 'tav_hav')
return(res)
}
x_prestadores_am <- read_excel('prestadores_2016_17.xlsx') %>%
select(codigo = "Identificador do Prestador",
nome = "Nome do Prestador",
anomes = "Ano e Mês",
valor = "Valor Aprovado (calculado)",
quantidade = "Quantidade Aprovada") %>%
mutate(anomes = factor(anomes)) %>%
arrange(codigo, anomes)
View(x_prestadores_am)
str(x_prestadores_am)
f_codigo <- factor(x_prestadores_am$codigo)
ls_range <- x_prestadores_am %>%
split(f_codigo) %>%
map(f.resumo)
df_prestadores <-  tibble('codigo' = character(),
'nome' = character(),
'am_min' = character(),
'min' = double(),
'am_max' = character(),
'max' = double(),
'q1' = double(),
'q2' = double(),
'q3' = double(),
'avg' = double(),
'sum' = double(),
'mx_mi' = double(),
'av_mi' = double(),
'mx_av' = double(),
'tav_hav' = double())
View(df_prestadores)
for(i in seq_along(ls_range)) {
for(j in seq_along(ls_range[[i]])) {
df_prestadores[i, j] <- ls_range[[i]][[j]]
}
}
View(df_prestadores)
