FA.df_base <- x_fat_ate_d %>%
filter(DELTA_ANM == 0) %>%
group_by(CODIGO, PRESTADOR, ANOMES = ANOMES_FT) %>%
dplyr::summarise(QTA_FCR = sum(QP, na.rm = T), VA_FCR = sum(VA, na.rm = T),
VR_FCR = sum(VR, na.rm = T), C_FCR = sum(CT, na.rm = T)) %>%
as.data.frame() %>%
merge(FA.df_base, ., by = c('CODIGO', 'PRESTADOR', 'ANOMES'), all = T)
FA.df_base <- x_fat_ate_d %>%
filter(DELTA_ANM != 0) %>%
group_by(CODIGO, PRESTADOR, ANOMES = ANOMES_FT) %>%
dplyr::summarise(QTA_FAC = sum(QP, na.rm = T), VA_FAC = sum(VA, na.rm = T),
VR_FAC = sum(VR, na.rm = T), C_FAC = sum(CT, na.rm = T)) %>%
as.data.frame() %>%
merge(FA.df_base, ., by = c('CODIGO', 'PRESTADOR', 'ANOMES'), all = T)
FA.df_base <- x_fat_ate_d %>%
filter(DELTA_ANM == 1) %>%
group_by(CODIGO, PRESTADOR, ANOMES = ANOMES_FT) %>%
dplyr::summarise(QTA_FMA = sum(QP, na.rm = T), VA_FMA = sum(VA, na.rm = T),
VR_FMA = sum(VR, na.rm = T), C_FMA = sum(CT, na.rm = T)) %>%
as.data.frame() %>%
merge(FA.df_base, ., by = c('CODIGO', 'PRESTADOR', 'ANOMES'), all = T)
FA.df_base <- x_fat_ate_d %>%
group_by(CODIGO, PRESTADOR, ANOMES = ANOMES_AT) %>%
dplyr::summarise(QTA_ATE = sum(QP, na.rm = T), VA_ATE = sum(VA, na.rm = T),
VR_ATE = sum(VR, na.rm = T), C_ATE = sum(CT, na.rm = T)) %>%
as.data.frame()%>%
merge(FA.df_base, ., by = c('CODIGO', 'PRESTADOR', 'ANOMES'), all.x = T)
FA.df_base[is.na(FA.df_base)] <- 0
names(FA.df_base)
FA.df_base %<>% select(CODIGO, PRESTADOR, ANOMES,
VA_FTT, VA_ATE, VA_FCR, VA_FAC, VA_FMA,
# QTA_FTT, QTA_ATE, QTA_FCR, QTA_FAC, QTA_FMA,
VR_FTT, VR_ATE, VR_FCR, VR_FAC, VR_FMA,
C_FTT, C_ATE #, C_FCR, C_FAC, C_FMA
) %>%
mutate(P_FCR = VA_FCR/VA_FTT, P_FMA = VA_FMA/VA_FTT, DIF = VA_FTT-VA_ATE)
write.csv2(FA.df_base, 'Prestador_FT_AT_Anomes_d.csv')
#x_fat_ate <- read_excel('Geral2014_17_prestadores_t.xls')
x_fat_ate <- read_excel('Geral2014_17_prestadores.xlsx')
as.tibble(x_fat_ate)
f.name_lst <- function(lt) {
prest <- names(lt)
anomes_vec <- x_fat_ate %>%
filter(CODIGO == prest) %>%
select(ANOMES)
idx_f <- length(anomes_vec[[1]])
idx_i <- idx_f - (length(lt[[1]]) - 1)
anomes_vec <- anomes_vec[[1]][idx_i:idx_f]
return(anomes_vec)
}
x_fat_ate %<>% mutate(DIF = VA_FT-VA_AT)
FA.lst_scale <- x_fat_ate %>%
split(.$CODIGO, drop = T) %>%
map("DIF") %>%
map(scale, F, T) #%>%
#  map(f.get_last_scale, 2)
for (i in seq_along(FA.lst_scale)) names(FA.lst_scale[[i]]) <- f.name_lst(FA.lst_scale[i])
idx <- unlist(FA.lst_scale)
FA.df_scale <- tibble(prestador = character(), anomes = character(), escala = double())
for (i in seq_along(unlist(FA.lst_scale))) {
FA.df_scale[i,] <- c(str_sub(names(idx)[i], 1, str_locate(names(idx)[i], ".201")[1]-1),
str_sub(names(idx)[i], str_locate(names(idx)[i], ".201")[1]+1),
idx[i])
}
FA.df_scale %<>% mutate(escala = as.double(escala))
FA.df_scale
x_geral <- read_excel('Geral2014_17.xlsx')
as.tibble(x_geral)
x_geral <- cbind(x_geral, ID_AM = 1:42)
x_geral %<>% mutate(DIF = VA_FT-VA_AT)
FA.df_scale_geral <- cbind(anomes = x_geral$ANOMES,
escala = scale(x_geral$DIF,
center = F,
scale = T)[1:dim(x_geral)[1],1])
FA.df_scale_geral %<>%
as.tibble() %>%
mutate(escala = as.double(escala))
FA.df_scale_geral
x_fat_ate %<>%
add_column(., escala = FA.df_scale[match(paste(.$CODIGO,
.$ANOMES),
paste(FA.df_scale$prestador,
FA.df_scale$anomes)), 3][[1]]) %>%
add_column(., escala_geral = FA.df_scale_geral[match(.$ANOMES,
FA.df_scale_geral$anomes), 2][[1]]) %>%
add_column(., P_FCR = FA.df_base[match(paste(.$CODIGO,
.$ANOMES),
paste(FA.df_base$CODIGO,
FA.df_base$ANOMES)), 16])
write.csv2(x_fat_ate, 'Prestador_FT_AT_Anomes.csv')
x_fat_ate
f.sum_rank <- function(df) {
res <- vector()
res[1] <- sum(df$VA_FT, na.rm = T) + sum(df$VR_FT, na.rm = T)
res[2] <- mad(df$escala, na.rm = T)
res[3] <- mean(abs(df$escala), na.rm = T)
names(res) <- c('VT', 'DM', 'VM')
return(res)
}
FA.lst_rank <- x_fat_ate %>%
split(.$CODIGO, drop = T) %>%
map(f.sum_rank)
FA.df_rank <- tibble(prestador = character(),
faturado = double(),
dma = double(),
dma.c = double(),
faturado.r = integer(),
dma.r = integer(),
dma.c.r = integer())
for (i in seq_along(FA.lst_rank)) {
FA.df_rank[i,] <- c(names(FA.lst_rank)[[i]],
FA.lst_rank[[i]]['VT'],
FA.lst_rank[[i]]['DM'],
FA.lst_rank[[i]]['VM'],
0,
0,
0)
}
FA.df_rank <- FA.df_rank %>%
add_column(., nome = x_fat_ate[match(.$prestador,x_fat_ate$CODIGO), 2][[1]])
FA.df_rank %<>% mutate(faturado = as.double(faturado),
dma = as.double(dma),
dma.c = as.double(dma.c)) %>%
arrange(desc(faturado)) %>%
mutate(faturado.r = 1:dim(FA.df_rank)[1]) %>%
arrange(desc(dma)) %>%
mutate(dma.r = 1:dim(FA.df_rank)[1]) %>%
arrange(desc(dma.c)) %>%
mutate(dma.c.r = 1:dim(FA.df_rank)[1]) %>%
select(prestador, nome, faturado.r, faturado, dma.r, dma, dma.c.r, dma.c)
write.csv2(FA.df_rank, 'Prestador_ranking.csv')
FA.df_rank
x_fat_ate %<>% mutate(ANOMES = factor(.$ANOMES, levels = x_geral$ANOMES),
escala_geral = as.double(escala_geral))
FA.lst_prestador <- x_fat_ate %>%
split(.$CODIGO)
f.gg_param <- function(nm) {
v.gt <- which(FA.lst_prestador[[nm]][,'ANOMES'] == '201705')
ggp <- ggplot(data = FA.lst_prestador[[nm]], aes(x = ANOMES, y = escala_geral)) +
geom_linerange(aes(ymax = ifelse(escala > escala_geral, escala, escala_geral),
ymin = ifelse(escala <= escala_geral, escala, escala_geral),
col = (escala_geral-escala)),
size = 1.2, alpha = 0.3) +
geom_hline(yintercept = 0, col = 'black', alpha = 0.4) +
geom_vline(xintercept = v.gt, col = 'red', size = 1, alpha = 0.6) +
geom_label(aes(x = v.gt-0.2, y = 3, label = 'Gestão de teto >'), col = 'red', hjust = 'right', alpha = 0.8) +
geom_point(aes(y = escala, col = (escala_geral-escala)),
size = 4, alpha = 1) +
geom_point(col = 'red', size = 1.7, alpha = 0.5, shape = 15) +
scale_colour_gradient2(name='Delta para\nEscala Geral',
high = 'dark green',
mid = 'light blue',
low = 'red',
midpoint = 0) +
labs(title = paste0('Proporção do Delta Faturamento x Atendimento Padronizada\n',
FA.lst_prestador[[nm]][[1,'PRESTADOR']]),
x = 'Ano e Mês',
y = 'Desvios Padrão') +
theme_bw() +
theme(axis.text.x = element_text(angle = 45,
vjust = 1,
size = 9,
hjust = 1))
#geom_line(color = 'blue', size = 0.9, alpha = 0.6, group = 1) +
#geom_line(aes(y = escala), color = 'black', size = 0.5, alpha = 0.6, group = 1)
plot(ggp)
tbp <- FA.lst_prestador[[nm]] %>% select ('Ano e mês' = ANOMES,
'Valor Faturado' = VA_FT,
'Valor Atendido' = VA_AT,
'Qt. Faturada' = QTA_FT,
'Qt. Atendida' = QTA_AT) %>%
as.data.frame()
}
f.tb_param <- function(nm) {
print(FA.lst_prestador[[nm]][[1,'PRESTADOR']])
print('###############################################################')
tbp <- FA.lst_prestador[[nm]] %>% select ('Ano e mês' = ANOMES,
'Valor Faturado' = VA_FT,
'Valor Atendido' = VA_AT,
'Qt. Faturada' = QTA_FT,
'Qt. Atendida' = QTA_AT) %>%
as.data.frame()
print(tbp)
}
FA.lst_prestador[[1]]$ANOMES
##----------------------------------------------------------------------------
##----------------------------------------------------------------------------
##----------------------------------------------------------------------------
v.top <- 20
v.limite_min <- 35000000
# v.rank:
#   faturado.r
#   dma.r
#   dma.c.r
##----------------------------------------------------------------------------
##----------------------------------------------------------------------------
##----------------------------------------------------------------------------
FA.plot_rank <- FA.df_rank %>%
filter(faturado > v.limite_min)
v.top <- ifelse(dim(FA.plot_rank)[1] < v.top, dim(FA.plot_rank)[1], v.top)
FA.plot_rank %<>%
arrange(dma.r) %>%
select(prestador) %>%
'['(1:v.top,) %>%
'[['(1)
for (i in seq_along(FA.plot_rank)) {
f.gg_param(FA.plot_rank[i])
f.tb_param(FA.plot_rank[i])
}
names(FA.df_base)
## Opções iniciais de configuração do ambiente --------------
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
#### --------------------------------------------------------
library("stringr", lib.loc="~/R/win-library/3.4")
library("dplyr", lib.loc="~/R/win-library/3.4")
library("ggplot2", lib.loc="~/R/win-library/3.4")
library("readr", lib.loc="~/R/win-library/3.4")
library("tibble", lib.loc="~/R/win-library/3.4")
library("tidyr", lib.loc="~/R/win-library/3.4")
library("magrittr", lib.loc="~/R/win-library/3.4")
library("readxl", lib.loc="~/R/win-library/3.4")
library("purrr", lib.loc="~/R/win-library/3.4")
#### --------------------------------------------------------
#f.get_last_scale <- function(mtx, idx = 0) {
#  l <- dim(mtx)[1]
#  if (idx > 0) idx <- idx - 1
#  if (idx >= l) idx <- 1
#  i <- l - idx
#  mtx[i:l,1]
#}
x_anomes_id <- read_excel('anomes_id.xlsx') %>%
mutate(anomes = factor(anomes))
as.tibble(x_anomes_id)
x_fat_ate_d <- read_excel('Geral2014_17_prestadores_d.xlsx')
as.tibble(x_fat_ate_d)
x_fat_ate_d %<>%
merge(.,x_anomes_id, by.x = 'ANOMES_FT', by.y = 'anomes') %>%
merge(.,x_anomes_id, by.x = 'ANOMES_AT', by.y = 'anomes') %>%
select(CODIGO, PRESTADOR, ANOMES_FT, ID_FT = id.x, ANOMES_AT, ID_AT = id.y, QP, VA, VR) %>%   arrange(CODIGO, ID_FT, ID_AT) %>%
mutate(DELTA_ANM = ID_FT-ID_AT, CT = 1)
rm(FA.df_base)
FA.df_base <- x_fat_ate_d %>%
group_by(CODIGO, PRESTADOR, ANOMES = ANOMES_FT) %>%
dplyr::summarise(QTA_FTT = sum(QP, na.rm = T), VA_FTT = sum(VA, na.rm = T),
VR_FTT = sum(VR, na.rm = T), C_FTT = sum(CT, na.rm = T)) %>%
as.data.frame()
FA.df_base <- x_fat_ate_d %>%
filter(DELTA_ANM == 0) %>%
group_by(CODIGO, PRESTADOR, ANOMES = ANOMES_FT) %>%
dplyr::summarise(QTA_FCR = sum(QP, na.rm = T), VA_FCR = sum(VA, na.rm = T),
VR_FCR = sum(VR, na.rm = T), C_FCR = sum(CT, na.rm = T)) %>%
as.data.frame() %>%
merge(FA.df_base, ., by = c('CODIGO', 'PRESTADOR', 'ANOMES'), all = T)
FA.df_base <- x_fat_ate_d %>%
filter(DELTA_ANM != 0) %>%
group_by(CODIGO, PRESTADOR, ANOMES = ANOMES_FT) %>%
dplyr::summarise(QTA_FAC = sum(QP, na.rm = T), VA_FAC = sum(VA, na.rm = T),
VR_FAC = sum(VR, na.rm = T), C_FAC = sum(CT, na.rm = T)) %>%
as.data.frame() %>%
merge(FA.df_base, ., by = c('CODIGO', 'PRESTADOR', 'ANOMES'), all = T)
FA.df_base <- x_fat_ate_d %>%
filter(DELTA_ANM == 1) %>%
group_by(CODIGO, PRESTADOR, ANOMES = ANOMES_FT) %>%
dplyr::summarise(QTA_FMA = sum(QP, na.rm = T), VA_FMA = sum(VA, na.rm = T),
VR_FMA = sum(VR, na.rm = T), C_FMA = sum(CT, na.rm = T)) %>%
as.data.frame() %>%
merge(FA.df_base, ., by = c('CODIGO', 'PRESTADOR', 'ANOMES'), all = T)
FA.df_base <- x_fat_ate_d %>%
group_by(CODIGO, PRESTADOR, ANOMES = ANOMES_AT) %>%
dplyr::summarise(QTA_ATE = sum(QP, na.rm = T), VA_ATE = sum(VA, na.rm = T),
VR_ATE = sum(VR, na.rm = T), C_ATE = sum(CT, na.rm = T)) %>%
as.data.frame()%>%
merge(FA.df_base, ., by = c('CODIGO', 'PRESTADOR', 'ANOMES'), all.x = T)
FA.df_base[is.na(FA.df_base)] <- 0
names(FA.df_base)
FA.df_base %<>% select(CODIGO, PRESTADOR, ANOMES,
VA_FTT, VA_ATE, VA_FCR, VA_FAC, VA_FMA,
# QTA_FTT, QTA_ATE, QTA_FCR, QTA_FAC, QTA_FMA,
VR_FTT, VR_ATE, VR_FCR, VR_FAC, VR_FMA,
C_FTT, C_ATE #, C_FCR, C_FAC, C_FMA
) %>%
mutate(P_FCR = VA_FCR/VA_FTT, P_FMA = VA_FMA/VA_FTT, DIF = VA_FTT-VA_ATE)
write.csv2(FA.df_base, 'Prestador_FT_AT_Anomes_d.csv')
#x_fat_ate <- read_excel('Geral2014_17_prestadores_t.xls')
x_fat_ate <- read_excel('Geral2014_17_prestadores.xlsx')
as.tibble(x_fat_ate)
f.name_lst <- function(lt) {
prest <- names(lt)
anomes_vec <- x_fat_ate %>%
filter(CODIGO == prest) %>%
select(ANOMES)
idx_f <- length(anomes_vec[[1]])
idx_i <- idx_f - (length(lt[[1]]) - 1)
anomes_vec <- anomes_vec[[1]][idx_i:idx_f]
return(anomes_vec)
}
x_fat_ate %<>% mutate(DIF = VA_FT-VA_AT)
FA.lst_scale <- x_fat_ate %>%
split(.$CODIGO, drop = T) %>%
map("DIF") %>%
map(scale, F, T) #%>%
#  map(f.get_last_scale, 2)
for (i in seq_along(FA.lst_scale)) names(FA.lst_scale[[i]]) <- f.name_lst(FA.lst_scale[i])
idx <- unlist(FA.lst_scale)
FA.df_scale <- tibble(prestador = character(), anomes = character(), escala = double())
for (i in seq_along(unlist(FA.lst_scale))) {
FA.df_scale[i,] <- c(str_sub(names(idx)[i], 1, str_locate(names(idx)[i], ".201")[1]-1),
str_sub(names(idx)[i], str_locate(names(idx)[i], ".201")[1]+1),
idx[i])
}
FA.df_scale %<>% mutate(escala = as.double(escala))
FA.df_scale
x_geral <- read_excel('Geral2014_17.xlsx')
as.tibble(x_geral)
x_geral <- cbind(x_geral, ID_AM = 1:42)
x_geral %<>% mutate(DIF = VA_FT-VA_AT)
FA.df_scale_geral <- cbind(anomes = x_geral$ANOMES,
escala = scale(x_geral$DIF,
center = F,
scale = T)[1:dim(x_geral)[1],1])
FA.df_scale_geral %<>%
as.tibble() %>%
mutate(escala = as.double(escala))
FA.df_scale_geral
x_fat_ate %<>%
add_column(., escala = FA.df_scale[match(paste(.$CODIGO,
.$ANOMES),
paste(FA.df_scale$prestador,
FA.df_scale$anomes)), 3][[1]]) %>%
add_column(., escala_geral = FA.df_scale_geral[match(.$ANOMES,
FA.df_scale_geral$anomes), 2][[1]]) %>%
add_column(., P_FCR = FA.df_base[match(paste(.$CODIGO,
.$ANOMES),
paste(FA.df_base$CODIGO,
FA.df_base$ANOMES)), 16]) %>%
add_column(., C_FTT = FA.df_base[match(paste(.$CODIGO,
.$ANOMES),
paste(FA.df_base$CODIGO,
FA.df_base$ANOMES)), 14])
write.csv2(x_fat_ate, 'Prestador_FT_AT_Anomes.csv')
x_fat_ate
f.sum_rank <- function(df) {
res <- vector()
res[1] <- sum(df$VA_FT, na.rm = T) + sum(df$VR_FT, na.rm = T)
res[2] <- mad(df$escala, na.rm = T)
res[3] <- mean(abs(df$escala), na.rm = T)
names(res) <- c('VT', 'DM', 'VM')
return(res)
}
FA.lst_rank <- x_fat_ate %>%
split(.$CODIGO, drop = T) %>%
map(f.sum_rank)
FA.df_rank <- tibble(prestador = character(),
faturado = double(),
dma = double(),
dma.c = double(),
faturado.r = integer(),
dma.r = integer(),
dma.c.r = integer())
for (i in seq_along(FA.lst_rank)) {
FA.df_rank[i,] <- c(names(FA.lst_rank)[[i]],
FA.lst_rank[[i]]['VT'],
FA.lst_rank[[i]]['DM'],
FA.lst_rank[[i]]['VM'],
0,
0,
0)
}
FA.df_rank <- FA.df_rank %>%
add_column(., nome = x_fat_ate[match(.$prestador,x_fat_ate$CODIGO), 2][[1]])
FA.df_rank %<>% mutate(faturado = as.double(faturado),
dma = as.double(dma),
dma.c = as.double(dma.c)) %>%
arrange(desc(faturado)) %>%
mutate(faturado.r = 1:dim(FA.df_rank)[1]) %>%
arrange(desc(dma)) %>%
mutate(dma.r = 1:dim(FA.df_rank)[1]) %>%
arrange(desc(dma.c)) %>%
mutate(dma.c.r = 1:dim(FA.df_rank)[1]) %>%
select(prestador, nome, faturado.r, faturado, dma.r, dma, dma.c.r, dma.c)
write.csv2(FA.df_rank, 'Prestador_ranking.csv')
FA.df_rank
x_fat_ate %<>% mutate(ANOMES = factor(.$ANOMES, levels = x_geral$ANOMES),
escala_geral = as.double(escala_geral))
FA.lst_prestador <- x_fat_ate %>%
split(.$CODIGO)
f.gg_param <- function(nm) {
v.gt <- which(FA.lst_prestador[[nm]][,'ANOMES'] == '201705')
ggp <- ggplot(data = FA.lst_prestador[[nm]], aes(x = ANOMES, y = escala_geral)) +
geom_linerange(aes(ymax = ifelse(escala > escala_geral, escala, escala_geral),
ymin = ifelse(escala <= escala_geral, escala, escala_geral),
col = (escala_geral-escala)),
size = 1.2, alpha = 0.3) +
geom_point(aes(y = escala, col = (escala_geral-escala)),
size = 4, alpha = 1) +
geom_point(col = 'red', size = 1.7, alpha = 0.5, shape = 15) +
geom_line(aes(y = P_FCR), col = 'blue', size = 0.8, alpha = 0.7, group = 1) +
geom_hline(yintercept = 0, col = 'black', alpha = 0.4) +
geom_hline(yintercept = 1, col = 'green', alpha = 0.3) +
geom_vline(xintercept = v.gt, col = 'red', size = 1, alpha = 0.6) +
geom_label(aes(x = v.gt-0.2, y = 3, label = 'Gestão de teto >'),
col = 'red', hjust = 'right', alpha = 0.8) +
scale_y_continuous(breaks = seq(-4, 7, by = 0.5)) +
scale_colour_gradient2(name='Delta para\nEscala Geral',
high = 'dark green',
mid = 'light blue',
low = 'red',
midpoint = 0) +
labs(title = paste0('Proporção do Delta Faturamento x Atendimento Padronizada\n',
FA.lst_prestador[[nm]][[1,'PRESTADOR']]),
x = 'Ano e Mês',
y = 'Desvios Padrão') +
theme_bw() +
theme(axis.text.x = element_text(angle = 45,
vjust = 1,
size = 9,
hjust = 1))
#geom_line(color = 'blue', size = 0.9, alpha = 0.6, group = 1) +
#geom_line(aes(y = escala), color = 'black', size = 0.5, alpha = 0.6, group = 1)
plot(ggp)
tbp <- FA.lst_prestador[[nm]] %>% select ('Ano e mês' = ANOMES,
'Valor Faturado' = VA_FT,
'Valor Atendido' = VA_AT,
'Qt. Faturada' = QTA_FT,
'Qt. Atendida' = QTA_AT) %>%
as.data.frame()
}
f.tb_param <- function(nm) {
print(FA.lst_prestador[[nm]][[1,'PRESTADOR']])
print('###############################################################')
tbp <- FA.lst_prestador[[nm]] %>% select ('Ano e mês' = ANOMES,
'Valor Faturado' = VA_FT,
'Valor Atendido' = VA_AT,
'Qt. Faturada' = QTA_FT,
'Qt. Atendida' = QTA_AT) %>%
as.data.frame()
print(tbp)
}
FA.lst_prestador[[1]]$ANOMES
##----------------------------------------------------------------------------
##----------------------------------------------------------------------------
##----------------------------------------------------------------------------
v.top <- 20
v.limite_min <- 35000000
# v.rank:
#   faturado.r
#   dma.r
#   dma.c.r
##----------------------------------------------------------------------------
##----------------------------------------------------------------------------
##----------------------------------------------------------------------------
FA.plot_rank <- FA.df_rank %>%
filter(faturado > v.limite_min)
v.top <- ifelse(dim(FA.plot_rank)[1] < v.top, dim(FA.plot_rank)[1], v.top)
FA.plot_rank %<>%
arrange(dma.r) %>%
select(prestador) %>%
'['(1:v.top,) %>%
'[['(1)
for (i in seq_along(FA.plot_rank)) {
f.gg_param(FA.plot_rank[i])
f.tb_param(FA.plot_rank[i])
}
f.gg_param <- function(nm) {
v.gt <- which(FA.lst_prestador[[nm]][,'ANOMES'] == '201705')
ggp <- ggplot(data = FA.lst_prestador[[nm]], aes(x = ANOMES, y = escala_geral)) +
geom_linerange(aes(ymax = ifelse(escala > escala_geral, escala, escala_geral),
ymin = ifelse(escala <= escala_geral, escala, escala_geral),
col = (escala_geral-escala)),
size = 1.2, alpha = 0.3) +
geom_point(aes(y = escala, col = (escala_geral-escala)),
size = 4, alpha = 1) +
geom_point(col = 'red', size = 1.7, alpha = 0.5, shape = 15) +
geom_line(aes(y = (1-P_FCR)+4), col = 'blue', size = 0.8, alpha = 0.4, group = 1) +
geom_hline(yintercept = 0, col = 'black', alpha = 0.4) +
geom_hline(yintercept = 5, col = 'red', alpha = 0.7) +
geom_hline(yintercept = 4, col = 'green', alpha = 0.7) +
geom_vline(xintercept = v.gt, col = 'red', size = 1, alpha = 0.6) +
geom_label(aes(x = 2, y = 5.5, label = '% Acumulado'),
col = 'blue', hjust = 'left', alpha = 0.8) +
geom_label(aes(x = v.gt-0.2, y = 3, label = 'Gestão de teto >'),
col = 'red', hjust = 'right', alpha = 0.8) +
scale_y_continuous(breaks = seq(-4, 7, by = 0.5)) +
scale_colour_gradient2(name='Delta para\nEscala Geral',
high = 'dark green',
mid = 'light blue',
low = 'red',
midpoint = 0) +
labs(title = paste0('Proporção do Delta Faturamento x Atendimento Padronizada\n',
FA.lst_prestador[[nm]][[1,'PRESTADOR']]),
x = 'Ano e Mês',
y = 'Desvios Padrão') +
theme_bw() +
theme(axis.text.x = element_text(angle = 45,
vjust = 1,
size = 9,
hjust = 1))
#geom_line(color = 'blue', size = 0.9, alpha = 0.6, group = 1) +
#geom_line(aes(y = escala), color = 'black', size = 0.5, alpha = 0.6, group = 1)
plot(ggp)
tbp <- FA.lst_prestador[[nm]] %>% select ('Ano e mês' = ANOMES,
'Valor Faturado' = VA_FT,
'Valor Atendido' = VA_AT,
'Qt. Faturada' = QTA_FT,
'Qt. Atendida' = QTA_AT) %>%
as.data.frame()
}
for (i in seq_along(FA.plot_rank)) {
f.gg_param(FA.plot_rank[i])
f.tb_param(FA.plot_rank[i])
}
